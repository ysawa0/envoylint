default_language_version:
  # Force all unspecified python hooks to run python3
  python: python3
repos:
  # isort sorts imports alphabetically, and automatically separates them into sections and by type.
  - repo: https://github.com/pycqa/isort
    rev: 5.6.4
    hooks:
      - id: isort
        files: "backend"
        args: ["--settings-path", "setup.cfg"]
    # black is an automatic Python code formatter. It gives you speed, determinism, and freedom from pycodestyle nagging about formatting.
  - repo: https://github.com/psf/black
    rev: 20.8b1
    hooks:
      - id: black
        files: "backend"
        args: ["--config", "pyproject.toml"]
    # flake8 checks code base against PEP8, programming errors and cyclomatic complexity.
  - repo: https://gitlab.com/pycqa/flake8
    rev: 3.8.4
    hooks:
      - id: flake8
        files: "backend"
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: "v2.2.1"
    hooks:
      - id: prettier
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v3.4.0 # Use the ref you want to point at. Run pre-commit autoupdate after py3
    hooks:
      - id: check-ast # Simply check whether files parse as valid python.
        files: "backend"
      - id: check-yaml
      - id: check-added-large-files # Prevent giant files from being committed. Default 500kB.
      - id: requirements-txt-fixer # Sorts entries in requirements.txt
      - id: check-case-conflict # Check for files with names that would conflict on a case-insensitive filesystem like MacOS HFS+ or Windows FAT.
      - id: trailing-whitespace
      - id: check-merge-conflict # Check for files that contain merge conflict strings.
      - id: check-toml
      - id: check-json
      - id: end-of-file-fixer # Ensure newline at eof
